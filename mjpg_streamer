#!/bin/bash

#tim sayre tim@kitswv.com Kanwha IT Security, ltd. 
#taken from Miguel Grinberg http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi
#this script assumes there is nothing downloaded and installed and that raspbian is up to date
#this includes the commands to start and access the camera in 7 - 10 

#1. Install build dependencies
apt-get install libjpeg8-dev imagemagick libv4l-dev

#2. Add missing header
ln -s /usr/include/linux/videodev2.h /usr/include/linux/videodev.h

#3. Download MJPG-Streamer and unzip if it is there, otherwise wait until it is there
wget http://sourceforge.net/code-snapshots/svn/m/mj/mjpg-streamer/code/mjpg-streamer-code-182.zip
COUNTER=0
if [ -f /home/pi/mjpg-streamer-code-182.zip ]
then 
let COUNTER=COUNTER+1
while [ $COUNTER = 0 ]; 
do
echo downloading...
unzip mjpg-streamer-code-182.zip

#5. Build streamer
cd mjpg-streamer-code-182/mjpg-streamer
make mjpg_streamer input_file.so output_http.so

#6. Install streamer
cp mjpg_streamer /usr/local/bin
cp output_http.so input_file.so /usr/local/lib/cp -R www /usr/local/www

#7. Start the camera
#mkdir /tmp/stream
#raspistill --nopreview -w 640 -h 480 -q 5 -o /tmp/stream/pic.jpg -tl 100 -t 9999999 -th 0:0:0 &

#8. Start the streamer
#LD_LIBRARY_PATH=/usr/local/lib mjpg_streamer -i "input_file.so -f /tmp/stream -n pic.jpg" -o "output_http.so -w /usr/local/www"

#9. Watch the stream
#http://<IP-address>:8080

#10. Cleanup
#cd ../../
#rm -rf mjpg-streamer-182

#as an alternative, I use the 3 commands on 7-8 as a seperate script to run from ssh to start the camera remotely
#and it seems to work well.  i have not tried the cleanup, that is why it is commented out.
